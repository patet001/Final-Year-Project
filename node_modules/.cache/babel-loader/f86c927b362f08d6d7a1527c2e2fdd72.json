{"ast":null,"code":"import _classCallCheck from \"/var/www/html/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/starter_kit/src/components/Main.js\";\nimport React, { Component } from 'react';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Main).apply(this, arguments));\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n\n    /* For viewing posts from 1 profile, not functional\n      postFilter(filter){\n      return(\n        <div id = \"content\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Content</th>\n                <th scope=\"col\">Poster</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody id=\"postList\">\n              {this.props.posts.map((post,key)=>{\n                if(post.Name = filter){\n                  return(\n                    <tr key={key}>\n                      <th scope=\"row\">{post.id.toString()}</th>\n                      <td>{post.name}</td>\n                      <td>{post.content}</td>\n                      <td>{post.poster}</td>\n                      \n                      <td><button className=\"likeButton\">Like</button></td>\n                    </tr>\n    \n                  )\n                 }\n              })}\n             </tbody>\n           </table>\n        </div>\n      )\n      }*/\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        id: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Add Post\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var name = _this.postName.value;\n          var content = _this.postContent.value;\n\n          _this.props.createPost(name, content);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"postName\",\n        type: \"text\",\n        ref: function ref(input) {\n          _this.postName = input;\n        },\n        className: \"form-control\",\n        placeholder: \"Post Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"postContent\",\n        type: \"text\",\n        ref: function ref(input) {\n          _this.postContent = input;\n        },\n        className: \"form-control\",\n        placeholder: \"Post Content\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add Post\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"View Posts\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var filter = _this.filterIn.value;\n\n          _this.postFilter(filter);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"filterIn\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search User\",\n        ref: function ref(input) {\n          _this.filterIn = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Filter\")), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Poster\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        id: \"postList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.props.posts.map(function (post, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, post.id.toString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, post.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, post.content), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, post.poster), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"likeButton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Like\")));\n      }))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/var/www/html/starter_kit/src/components/Main.js"],"names":["React","Component","Main","event","preventDefault","name","postName","value","content","postContent","props","createPost","input","filter","filterIn","postFilter","posts","map","post","key","id","toString","poster"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Main extends Component {\n\n\n  /* For viewing posts from 1 profile, not functional\n\n\n  postFilter(filter){\n    return(\n      <div id = \"content\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">Poster</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"postList\">\n            {this.props.posts.map((post,key)=>{\n              if(post.Name = filter){\n                return(\n                  <tr key={key}>\n                    <th scope=\"row\">{post.id.toString()}</th>\n                    <td>{post.name}</td>\n                    <td>{post.content}</td>\n                    <td>{post.poster}</td>\n                    \n                    <td><button className=\"likeButton\">Like</button></td>\n                  </tr>\n  \n                )\n\n              }\n            })}\n\n          </tbody>\n\n        </table>\n      </div>\n    )\n\n\n  }*/\n\n\n  render() {\n    return (\n      <div id=\"content\">\n        {/*Add Posts*/}\n        <h1>Add Post</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.postName.value\n          const content = this.postContent.value\n          this.props.createPost(name, content)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"postName\"\n              type=\"text\"\n              ref={(input) => { this.postName = input }}\n              className=\"form-control\"\n              placeholder=\"Post Name\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"postContent\"\n              type=\"text\"\n              ref={(input) => { this.postContent = input }}\n              className=\"form-control\"\n              placeholder=\"Post Content\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Add Post</button>\n        </form>\n\n\n        <p> </p>\n        {/*View Posts*/}\n        <h2>View Posts</h2>\n\n\n\n\n        {/*Filter Posts*/}\n        <form\n          onSubmit={(event)=>{\n            event.preventDefault()\n            const filter = this.filterIn.value\n            \n            this.postFilter(filter)         \n\n\n          }}>\n            <div>\n              <input\n                id=\"filterIn\"\n                type=\"text\"\n                className='form-control'\n                placeholder='Search User'\n                ref={(input)=>{this.filterIn = input}}\n                />\n            </div>\n        \n            <button type='submit' className='btn btn-primary'>Filter</button>\n        </form>\n\n\n\n\n      \n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">Poster</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"postList\">\n            {this.props.posts.map((post,key)=>{\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{post.id.toString()}</th>\n                  <td>{post.name}</td>\n                  <td>{post.content}</td>\n                  <td>{post.poster}</td>\n                  \n                  <td><button className=\"likeButton\">Like</button></td>\n                </tr>\n\n              )\n            })}\n\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}